---
- name: Update web servers
  hosts: '{{ target }}'
  remote_user: ubuntu

  vars_prompt:
    - name: target
      prompt: enter the hostname which you might have mentioned in host file
      private: no

    - name: domain
      prompt: please enter the domain which will be serving the requests(eg sellerapp-staging.datasyndicate.in )
      private: no

    - name: envtype
      prompt: please enter the env file to copy, we are appending to .env, hence value can be -staging etc
      private: no

  tasks:
    - name: Clone seller-app(client, strapi)
      git:
        repo: "git@github.com:dataorchestration/seller-app.git"
        dest: "/home/ubuntu/seller-app"
        version: 'feature/logistics'
        force: yes

    - name: Clone seller-app-protocol
      git:
        repo: "git@github.com:dataorchestration/seller-app-protocol.git"
        dest: "/home/ubuntu/seller-app-protocol"
        version: 'logistics-api-integration'
        force: yes

    - name: Copy docker-compose file with domain replaced
      copy:
        src: "{{ playbook_dir }}/../docker-compose-with-images.yaml"
        dest: "/home/ubuntu/docker-compose.yml"
        owner: "ubuntu"
        group: "ubuntu"
        mode: "0755"

    - name: copy Dockerfile with ssl as dockerfile in bpp-nginx
      copy:
        src: "{{ playbook_dir }}/../bpp-nginx/Dockerfile"
        dest: "/home/ubuntu/bpp-nginx/Dockerfile"
        owner: "ubuntu"
        group: "ubuntu"
        mode: "0755"

    - name: copy nginx conf with ssl
      copy:
        src: "{{ playbook_dir }}/../bpp-nginx/nginx-replace-with-domain.conf"
        dest: "/home/ubuntu/bpp-nginx/nginx.conf"
        owner: "ubuntu"
        group: "ubuntu"
        mode: "0755"

    - name: replace __domain__ with domain name
      replace:
        path: "/home/ubuntu/bpp-nginx/nginx.conf"
        regexp: "__domain_name__"
        replace: "{{ domain }}"


    - name: Run docker compose up
      shell: "cd /home/ubuntu/ && sudo docker-compose build && sudo docker-compose up -d"
