---
- name: Update web servers
  hosts: '{{ target }}'
  remote_user: ubuntu

  vars_prompt:
    - name: target
      prompt: enter the hostname which you might have mentioned in host file
      private: no

    - name: domain
      prompt: please enter the domain which will be serving the requests(eg sellerapp-staging.datasyndicate.in or ref-seller-app-preprod.ondc.org )
      private: no

    - name: envtype
      prompt: please enter the env file to copy, we are appending to .env, hence value can be -staging etc
      private: no


  tasks:
    - name: Clone seller-app(client, strapi)
      git:
        repo: "git@github.com:dataorchestration/seller-app.git"
        dest: "/home/ubuntu/seller-app"
        version: 'master'
        force: yes


    - name: Clone seller-app-protocol
      git:
        repo: "git@github.com:dataorchestration/seller-app-protocol.git"
        dest: "/home/ubuntu/seller-app-protocol"
        version: 'master'
        force: yes


    - name: Copy lets encrypt with domain replaced
      copy:
        src: "{{ playbook_dir }}/../init-letsencrypt.sh"
        dest: "/home/ubuntu/init-letsencrypt.sh"
        owner: "ubuntu"
        group: "ubuntu"
        mode: "0755"

    - name: replace __domain__ with domain name
      replace:
        path: "/home/ubuntu/init-letsencrypt.sh"
        regexp: "__domain_name__"
        replace: "{{ domain }}"

    - name: Copy bpp-nginx folder
      copy:
        src: "{{ playbook_dir }}/../bpp-nginx"
        dest: "/home/ubuntu/"
        owner: "ubuntu"
        group: "ubuntu"
        mode: "0755"

    - name: copy Dockerfile without SSL as dockerfile in bpp-nginx
      copy:
        src: "{{ playbook_dir }}/../bpp-nginx/DockerfileWithoutSSL"
        dest: "/home/ubuntu/bpp-nginx/Dockerfile"
        owner: "ubuntu"
        group: "ubuntu"
        mode: "0755"

    - name: replace __domain__ with in nginx.conf
      replace:
        path: "/home/ubuntu/bpp-nginx/nginx-without-ssl.conf"
        regexp: "__domain_name__"
        replace: "{{ domain }}"


    - name: copy env file with domain replaced
      copy:
        src: "{{ playbook_dir }}/../.env{{ envtype }}"
        dest: "/home/ubuntu/.env"
        owner: "ubuntu"
        group: "ubuntu"
        mode: "0755"

    - name: replace __domain__ with domain name
      replace:
        path: "/home/ubuntu/.env"
        regexp: "__domain_name__"
        replace: "{{ domain }}"

    - name: Copy docker-compose file with domain replaced
      copy:
        src: "{{ playbook_dir }}/../docker-compose-without-ssl.yaml"
        dest: "/home/ubuntu/docker-compose.yml"
        owner: "ubuntu"
        group: "ubuntu"
        mode: "0755"


    #sudo chmod -R a+w ~/.docker-conf/rabbitmq/log
    - name: give permissions for rabbitmq data
      become: yes
      file:
        path: "/home/ubuntu/.docker-conf/rabbitmq/data/"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: 0755


    - name: give permissions for rabbitmq log
      become: yes
      file:
        path: "/home/ubuntu/.docker-conf/rabbitmq/log/"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: 0755

    - name: Run docker compose up
      shell: "cd /home/ubuntu/ && sudo docker-compose build && sudo docker-compose up -d"

    - name: run letsencrypt
      shell: "cd /home/ubuntu/ && sudo ./init-letsencrypt.sh"
